FROM buildpack-deps:jessie

ARG NPROCS
#include "env.docker"

// get make 3.82

WORKDIR /src
RUN wget -q "ftp://ftp.gnu.org/gnu/make/make-3.82.tar.bz2" \
    && tar xpf make-3.82.tar.bz2 \
    && cd make-3.82 \
    && ./configure --prefix=/usr \
    && ./build.sh \
    && ./make install \
    && cd .. \
    && rm -rf make-3.82 make-3.82.tar.bz2

// dependencies

RUN apt-get update && apt-get install -y --no-install-recommends \
        bison \
        flex \
        gawk \
        texinfo \
        perl \
        gettext \
    && rm -rf /var/cache/apt/archives /var/lib/apt/lists

// cross
//
// Following sed command at *1* is to fix undefined '__stack_chk_guard' problem on x86 and x64.
// see http://www.linuxquestions.org/questions/linux-from-scratch-13/install-glibc-2-17-error-help-me-4175460557/ and
// http://stackoverflow.com/questions/15787684/lfs-glibc-compilation-ld-error for mode details

ENV PATH ${CROS_HOST_PREFIX}/bin:$PATH

WORKDIR /src
RUN wget -q "https://www.kernel.org/pub/linux/kernel/v3.x/${LINUX_VERSION}.tar.xz" \
    && tar xfk ${LINUX_VERSION}.tar.xz \
    && rm ${LINUX_VERSION}.tar.xz \
    && cd /src/${LINUX_VERSION} \
    && make mrproper && make ARCH=${CROS_KERNEL_ARCH} INSTALL_HDR_PATH=${CROS_HOST_PREFIX}/${CROS_TARGET} headers_install \
    && cd .. \
    && rm -rf /src/${LINUX_VERSION}

RUN git clone -b ${BINUTILS_CHROMIUM_VERSION} --depth 1 "https://chromium.googlesource.com/chromiumos/third_party/binutils" /src/${BINUTILS_VERSION} \
    && dir="$(mktemp -d)" \
    && cd "$dir" \
    && /src/${BINUTILS_VERSION}/configure \
        --prefix=${CROS_HOST_PREFIX} \
        --build=${CROS_HOST} \
        --host=${CROS_HOST} \
        --target=${CROS_TARGET} \
        ${CROS_CROSS_GCC_OPT} \
    && make -j ${CROS_CORES} \
    && make install-strip \
    && cd .. \
    && rm -rf "$dir" \
    && rm -rf /src/${BINUTILS_VERSION}

RUN wget -q "ftp://ftp.gnu.org/gnu/gmp/${GMP_VERSION}.tar.bz2" \
    && wget -q "ftp://ftp.gnu.org/gnu/mpfr/${MPFR_VERSION}.tar.gz" \
    && wget -q "ftp://ftp.gnu.org/gnu/mpc/${MPC_VERSION}.tar.gz" \
    && wget -q "http://isl.gforge.inria.fr/${ISL_VERSION}.tar.xz" \
    && wget -q "http://www.bastoul.net/cloog/pages/download/count.php3?url=./${CLOOG_VERSION}.tar.gz" -O "${CLOOG_VERSION}.tar.gz" \
    && wget -q "ftp://ftp.gnu.org/gnu/glibc/${GLIBC_VERSION}.tar.gz" \
    && wget -q "ftp://gcc.gnu.org/pub/gcc/releases/${GCC_VERSION}/${GCC_VERSION}.tar.bz2" \
    && for f in *.tar*; do tar xfk $f; done \
    && rm -rf *.tar* \
    && cd /src/${GCC_VERSION} \
    && ln -s ../${GMP_VERSION} gmp \
    && ln -s ../${MPFR_VERSION} mpfr \
    && ln -s ../${MPC_VERSION} mpc \
    && ln -s ../${ISL_VERSION} isl \
    && ln -s ../${CLOOG_VERSION} cloog \
    && sed -i '/k prot/agcc_cv_libc_provides_ssp=yes' gcc/configure /*1*/ \
    && gccdir="$(mktemp -d)" \
    && glibcdir="$(mktemp -d)" \
    && cd "$gccdir" \
    && /src/${GCC_VERSION}/configure \
        --prefix=${CROS_HOST_PREFIX} \
        --build=${CROS_HOST} \
        --host=${CROS_HOST} \
        --target=${CROS_TARGET} \
        --enable-languages=c,c++,fortran \
        --disable-staic \
        --disable-werror \
        ${CROS_CROSS_GCC_OPT} \
    && make -j ${CROS_CORES} all-gcc \
    && make install-gcc \
    && cd "$glibcdir" \
    && /src/${GLIBC_VERSION}/configure \
        --prefix=${CROS_HOST_PREFIX}/${CROS_TARGET} \
        --build=${CROS_HOST} \
        --host=${CROS_TARGET} \
        --target=${CROS_TARGET} \
        --with-headers=${CROS_HOST_PREFIX}/${CROS_TARGET}/include \
        --disable-werror \
        --enable-shared \
        --disable-staic \
        ${CROS_CROSS_LIBC_OPT} \
    && make install-bootstrap-headers=yes install-headers \
    && make -j ${CROS_CORES} csu/subdir_lib \
    && install csu/crt1.o csu/crti.o csu/crtn.o ${CROS_HOST_PREFIX}/${CROS_TARGET}/lib \
    && ${CROS_TARGET}-gcc -nostdlib -nostartfiles -shared -x c /dev/null -o ${CROS_HOST_PREFIX}/${CROS_TARGET}/lib/libc.so \
    && touch ${CROS_HOST_PREFIX}/${CROS_TARGET}/include/gnu/stubs.h \
    && cd "$gccdir" \
    && make -j ${CROS_CORES} all-target-libgcc && make install-target-libgcc \
    && cd "$glibcdir" \
    && make -j ${CROS_CORES} && make install \
    && cd "$gccdir" \
    && make -j ${CROS_CORES} all && make install-strip \
    && cd / \
    && rm -rf "$gccdir" \
    && rm -rf "$glibcdir" \
    && rm -rf "/src/${GMP_VERSION}" "/src/${MPFR_VERSION}" "/src/${MPC_VERSION}" "/src/${ISL_VERSION}" "/src/${CLOOG_VERSION}" "/src/${GLIBC_VERSION}" "/src/${GCC_VERSION}"

ENV ZLIB_VERSION zlib-1.2.11

RUN wget -q "http://zlib.net/${ZLIB_VERSION}.tar.gz" \
    && tar xfk ${ZLIB_VERSION}.tar* \
    && rm -rf ${ZLIB_VERSION}.tar* \
    && cd "/src/${ZLIB_VERSION}" \
    && CC=${CROS_TARGET}-gcc ./configure --prefix=${CROS_HOST_PREFIX}/${CROS_TARGET} \
    && make \
    && make install \
    && rm -rf "/src/${ZLIB_VERSION}"

#ifdef CHROMEBREW_ARMV8
ENV OPENSSL_TARGET linux-armv4 -Wa,--noexecstack -march=armv7-a
#endif
#ifdef CHROMEBREW_ARMV7
ENV OPENSSL_TARGET linux-armv4 -Wa,--noexecstack -march=armv7-a
#endif
#ifdef CHROMEBREW_X86
ENV OPENSSL_TARGET linux-elf -Wa,--noexecstack
#endif
#ifdef CHROMEBREW_X64
ENV OPENSSL_TARGET linux-x86_64 -Wa,--noexecstack
#endif

RUN wget -q "https://github.com/openssl/openssl/archive/OpenSSL_1_0_2l.tar.gz" \
    && tar xfk OpenSSL_1_0_2l.tar.gz \
    && rm -rf OpenSSL_1_0_2l.tar.gz \
    && cd /src/openssl* \
    && CC=${CROS_TARGET}-gcc RANLIB=${CROS_TARGET}-ranlib ./Configure \
      --prefix=${CROS_HOST_PREFIX}/${CROS_TARGET} \
      --openssldir=/etc/ssl \
      shared zlib-dynamic ${OPENSSL_TARGET} \
    && make \
    && make install \
    && rm -rf /src/openssl*
