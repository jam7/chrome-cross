// native compilation

#include "../env.docker"

// prepare gcc and library sources

// Following sed command at *1* is to fix undefined '__stack_chk_guard' problem on x86 and x64.
// see http://www.linuxquestions.org/questions/linux-from-scratch-13/install-glibc-2-17-error-help-me-4175460557/ and
// http://stackoverflow.com/questions/15787684/lfs-glibc-compilation-ld-error for mode details

cd /src \
    && wget -cq "ftp://gcc.gnu.org/pub/gcc/releases/${GCC_VERSION}/${GCC_VERSION}.tar.bz2" \
    && tar xfp ${GCC_VERSION}.tar* \
    && rm -rf ${GCC_VERSION}.tar* \
    && sed -i '/k prot/agcc_cv_libc_provides_ssp=yes' /src/${GCC_VERSION}/gcc/configure /*1*/
[ "$?" != "0" ] && exit 1

// gmp, mpfr, mpc, isl and cloog

cd ${CROS_HOST_PREFIX}/${CROS_TARGET} \
    && tar xfp /dist/gmp*${CROS_PKG_ARCH}*.tar.xz \
    && tar xfp /dist/mpfr*${CROS_PKG_ARCH}*.tar.xz \
    && tar xfp /dist/mpc*${CROS_PKG_ARCH}*.tar.xz \
    && tar xfp /dist/isl*${CROS_PKG_ARCH}*.tar.xz \
    && tar xfp /dist/cloog*${CROS_PKG_ARCH}*.tar.xz \
    && cd ${CROS_HOST_PREFIX}/${CROS_TARGET}/lib \
    && ln -s ${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_LIB}/lib* .
[ "$?" != "0" ] && exit 1

// gcc

pkgname=${GCC_VERSION}-chromeos-${CROS_PKG_ARCH}
mkdir -p /build/gcc \
    && cd /build/gcc \
    && LDFLAGS=${CROS_NATIVE_LDFLAGS} /src/${GCC_VERSION}/configure \
        --prefix=${CROS_TARGET_PREFIX} \
        --build=${CROS_HOST} \
        --host=${CROS_TARGET} \
        --target=${CROS_TARGET} \
        --enable-languages=c,c++,fortran \
        --disable-static \
        --disable-werror \
        --with-gmp-include=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_PREFIX}/include \
        --with-gmp-lib=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_LIB} \
        --with-mpfr-include=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_PREFIX}/include \
        --with-mpfr-lib=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_LIB} \
        --with-mpc-include=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_PREFIX}/include \
        --with-mpc-lib=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_LIB} \
        --with-isl-include=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_PREFIX}/include \
        --with-isl-lib=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_LIB} \
        --with-cloog-include=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_PREFIX}/include \
        --with-cloog-lib=${CROS_HOST_PREFIX}/${CROS_TARGET}${CROS_TARGET_LIB} \
        ${CROS_NATIVE_GCC_OPT} \
    && make -j ${CROS_CORES} \
    && make DESTDIR=${CROS_HOST_DEST}/${pkgname} install-strip \
    && find ${CROS_HOST_DEST}/${pkgname}${CROS_TARGET_LIB} -maxdepth 1 -name '*.a' | grep -v nonshared.a | xargs rm \
    && cd ${CROS_HOST_DEST}/${pkgname} \
    && sh ../create_package.sh \
    && rm -rf ${CROS_HOST_DEST}/${pkgname}
